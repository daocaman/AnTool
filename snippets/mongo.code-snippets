{
    "Mongo db setup": {
        "prefix": "!mongoConfig.js",
        "body": [
            "const mongoose = require('mongoose');",
            "const dbConfig = require('./dbConfig');",
            "var link_db = \"mongodb+srv://{username}:{password}@managecompany.wz3vd.mongodb.net/{database}?retryWrites=true&w=majority\"",
            "link_db = link_db.replace(\"{username}\", dbConfig.user_db);",
            "link_db = link_db.replace(\"{password}\", dbConfig.password);",
            "link_db = link_db.replace(\"{database}\", dbConfig.database_name);",
            "mongoose.connect(link_db, {",
            "    useNewUrlParser: true,",
            "    useUnifiedTopology: true,",
            "    useFindAndModify: false,",
            "    useCreateIndex: true",
            "}, async (err) => {",
            "    if (err) {",
            "        console.log(err)",
            "    } else {",
            "        console.log('Connect database successfully!')",
            "    }",
            "});",
            "// console.log(mongoose.connection)",
            "mongoose.Promise = global.Promise;",
            "var db = mongoose.connection;",
            "// console.log(db)",
            "db.on('error', console.error.bind(console, 'MongoDB connection error:'));",
        ],
        "description": "Mongo db setup"
    },
    "Mongo model": {
        "prefix": "!mongoModel",
        "body": [
            "const mongoose = require('mongoose');",
            "",
            "mongoose.Promise = global.Promise;",
            "",
            "const ${1:schemaName} = new mongoose.Schema({",
            "    ${2:attribute}: { type: ${3|String,Date,Number,Boolean,Array|} , ${4| ,required:true|} },",
            "",
            " }, { timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' } });",
            "",
            "const ${5:model} = mongoose.model('user', ${1:schemaName});",
            "",
            "module.exports = ${5:model};"
        ],
        "description": "Mongo model"
    },
    "Mongo model field": {
        "prefix": "!mongoModelField",
        "body": [
            "${1:attribute}: { type: ${2|String,Date,Number,Boolean,Array|} , ${3| ,required:true|} },",
        ],
        "description": "Mongo model field"
    },
    "Mongo db find": {
        "prefix": "!mongoFind",
        "body": "await ${1:model}.find(${2| ,{}|}, ${3| ,'-attr1 -attr2', ex_attr |}, ${4| ,{ skip: 10 , limit: 10}|}).exec();",
        "description": "Mongo db finding"
    },
    "Mongo db findOne": {
        "prefix": "!mongoFindOne",
        "body": "await ${1:model}.findOne(${2| ,{}|}, ${3| ,'-attr1 -attr2', ex_attr |}).exec();",
        "description": "Mongo db find one"
    },
    "Mongo db findById": {
        "prefix": "!mongoFindById",
        "body": "await ${1:model}.findById(${2:id}, ${3| ,'-attr1 -attr2', ex_attr |}).exec();",
        "description": "Mongo db find by id"
    },
    "Mongo db create": {
        "prefix": "!mongoCreate",
        "body": "await ${1:Model}.create(${2| ,{ },[]|});",
        "description": "Mongo db create"
    },
    "Mongo db exclude":{
        "prefix": "!mongoExclude",
        "body": "let ex_attr = '-__v -created_at -updated_at';",
        "description": "Mongo db exclude field"
    },
    "Mongo db ref":{
        "prefix": "!mongoRefField",
        "body": [
            "{",
            "    type: Schema.Types.ObjectId,",
            "    ref: '${1:table}'",
            "},",
        ],
        "description": "Mongo model ref field"
    },
    "Mongo db regExp":{
        "prefix": "!mongoRegExp",
        "body": "{ $regex: $1 }",
        "description": "Mongo db regular exception"
    },
    "Mongo db populate line":{
        "prefix": "!mongoPopulateLine",
        "body": ".populate('${1:attribute}', ex_attr )",
        "description": "Mongo db populate line"
    },
    "Mongo db populate obj":{
        "prefix": "!mongoPopulteObj",
        "body": [
            "{",
            "    path: '${1:path1}',",
            "    populate: { path: '${2:path2}', select: ex_attr },",
            "    select: ex_attr ",
            "}",
        ],
        "description": "Mongo db populate obj"
    }

}